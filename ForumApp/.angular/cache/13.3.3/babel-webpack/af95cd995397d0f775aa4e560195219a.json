{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\molot\\\\source\\\\repos\\\\ForumWebAPI\\\\ForumApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AddThemeModel } from 'src/app/models/AddThemeModel';\nexport const QuillConfiguration = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], ['link'], ['clean']],\n  theme: 'snow'\n};\nexport class AddthemecomponentComponent {\n  constructor(_activatedRoute, themeService, toastr, route, subSectionService) {\n    this._activatedRoute = _activatedRoute;\n    this.themeService = themeService;\n    this.toastr = toastr;\n    this.route = route;\n    this.subSectionService = subSectionService;\n    this.themeForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      content: new FormControl('', [Validators.required, Validators.minLength(3)])\n    });\n  }\n\n  ngOnInit() {\n    this._activatedRoute.paramMap.subscribe(params => {\n      this.subSectionId = Number(params.get('id'));\n    });\n\n    this.subSectionService.getSubSections().subscribe(data => {\n      data.forEach(element => {\n        if (element.sectionId == this.subSectionId) {\n          this.subSection = element;\n        }\n      });\n    }), err => {\n      //When unsuccessful, this will run\n      console.error('Something broke!', err);\n    };\n  }\n\n  AddTheme(theme) {\n    var _this = this;\n\n    let newTheme = new AddThemeModel(theme.value.name, theme.value.content, this.subSectionId);\n    this.themeService.postAddTheme(newTheme).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.toastr.success(\"\", \"Succesful adding new theme\", {\n        timeOut: 2000,\n        progressBar: true,\n        progressAnimation: 'increasing'\n      });\n\n      yield new Promise(f => setTimeout(f, 1200));\n\n      _this.route.navigate(['']);\n    }), error => {\n      this.toastr.error(\"Error while adding theme\");\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/molot/source/repos/ForumWebAPI/ForumApp/src/app/components/addthemecomponent/addthemecomponent.component.ts"],"names":["FormControl","FormGroup","Validators","AddThemeModel","QuillConfiguration","toolbar","list","header","color","background","theme","AddthemecomponentComponent","constructor","_activatedRoute","themeService","toastr","route","subSectionService","themeForm","name","required","minLength","content","ngOnInit","paramMap","subscribe","params","subSectionId","Number","get","getSubSections","data","forEach","element","sectionId","subSection","err","console","error","AddTheme","newTheme","value","postAddTheme","success","timeOut","progressBar","progressAnimation","Promise","f","setTimeout","navigate"],"mappings":"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","sourcesContent":["import { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AddThemeModel } from 'src/app/models/AddThemeModel';\r\nexport const QuillConfiguration = {\r\n    toolbar: [\r\n        ['bold', 'italic', 'underline', 'strike'],\r\n        ['blockquote', 'code-block'],\r\n        [{ list: 'ordered' }, { list: 'bullet' }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [{ color: [] }, { background: [] }],\r\n        ['link'],\r\n        ['clean'],\r\n    ],\r\n    theme: 'snow'\r\n};\r\nexport class AddthemecomponentComponent {\r\n    constructor(_activatedRoute, themeService, toastr, route, subSectionService) {\r\n        this._activatedRoute = _activatedRoute;\r\n        this.themeService = themeService;\r\n        this.toastr = toastr;\r\n        this.route = route;\r\n        this.subSectionService = subSectionService;\r\n        this.themeForm = new FormGroup({\r\n            name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n            content: new FormControl('', [Validators.required, Validators.minLength(3)])\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this._activatedRoute.paramMap.subscribe(params => {\r\n            this.subSectionId = Number(params.get('id'));\r\n        });\r\n        this.subSectionService.getSubSections()\r\n            .subscribe((data) => {\r\n            data.forEach(element => {\r\n                if (element.sectionId == this.subSectionId) {\r\n                    this.subSection = element;\r\n                }\r\n            });\r\n        }), (err) => {\r\n            //When unsuccessful, this will run\r\n            console.error('Something broke!', err);\r\n        };\r\n    }\r\n    AddTheme(theme) {\r\n        let newTheme = new AddThemeModel(theme.value.name, theme.value.content, this.subSectionId);\r\n        this.themeService.postAddTheme(newTheme).subscribe(async () => {\r\n            this.toastr.success(\"\", \"Succesful adding new theme\", { timeOut: 2000, progressBar: true, progressAnimation: 'increasing' });\r\n            await new Promise(f => setTimeout(f, 1200));\r\n            this.route.navigate(['']);\r\n        }, error => {\r\n            this.toastr.error(\"Error while adding theme\");\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}